/**
 * Adyen api
 * Operations about payments, recurring and payout
 *
 * OpenAPI spec version: 30
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AdyenApiJs);
  }
}(this, function(expect, AdyenApiJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AdyenApiJs.PaymentRequest3d();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentRequest3d', function() {
    it('should create an instance of PaymentRequest3d', function() {
      // uncomment below and update the code to test PaymentRequest3d
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be.a(AdyenApiJs.PaymentRequest3d);
    });

    it('should have the property md (base name: "md")', function() {
      // uncomment below and update the code to test the property md
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property paResponse (base name: "paResponse")', function() {
      // uncomment below and update the code to test the property paResponse
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property reference (base name: "reference")', function() {
      // uncomment below and update the code to test the property reference
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress (base name: "billingAddress")', function() {
      // uncomment below and update the code to test the property billingAddress
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property shopperIP (base name: "shopperIP")', function() {
      // uncomment below and update the code to test the property shopperIP
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property merchantAccount (base name: "merchantAccount")', function() {
      // uncomment below and update the code to test the property merchantAccount
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property browserInfo (base name: "browserInfo")', function() {
      // uncomment below and update the code to test the property browserInfo
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property shopperInteraction (base name: "shopperInteraction")', function() {
      // uncomment below and update the code to test the property shopperInteraction
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property shopperEmail (base name: "shopperEmail")', function() {
      // uncomment below and update the code to test the property shopperEmail
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property shopperReference (base name: "shopperReference")', function() {
      // uncomment below and update the code to test the property shopperReference
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property recurring (base name: "recurring")', function() {
      // uncomment below and update the code to test the property recurring
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property shopperStatement (base name: "shopperStatement")', function() {
      // uncomment below and update the code to test the property shopperStatement
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property fraudOffset (base name: "fraudOffset")', function() {
      // uncomment below and update the code to test the property fraudOffset
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property sessionId (base name: "sessionId")', function() {
      // uncomment below and update the code to test the property sessionId
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property additionalAmount (base name: "additionalAmount")', function() {
      // uncomment below and update the code to test the property additionalAmount
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property selectedRecurringDetailReference (base name: "selectedRecurringDetailReference")', function() {
      // uncomment below and update the code to test the property selectedRecurringDetailReference
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property orderReference (base name: "orderReference")', function() {
      // uncomment below and update the code to test the property orderReference
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property merchantOrderReference (base name: "merchantOrderReference")', function() {
      // uncomment below and update the code to test the property merchantOrderReference
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property dccQuote (base name: "dccQuote")', function() {
      // uncomment below and update the code to test the property dccQuote
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property additionalData (base name: "additionalData")', function() {
      // uncomment below and update the code to test the property additionalData
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property shopperName (base name: "shopperName")', function() {
      // uncomment below and update the code to test the property shopperName
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property shopperLocale (base name: "shopperLocale")', function() {
      // uncomment below and update the code to test the property shopperLocale
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property selectedBrand (base name: "selectedBrand")', function() {
      // uncomment below and update the code to test the property selectedBrand
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property deliveryAddress (base name: "deliveryAddress")', function() {
      // uncomment below and update the code to test the property deliveryAddress
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property deliveryDate (base name: "deliveryDate")', function() {
      // uncomment below and update the code to test the property deliveryDate
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property deviceFingerprint (base name: "deviceFingerprint")', function() {
      // uncomment below and update the code to test the property deviceFingerprint
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property installments (base name: "installments")', function() {
      // uncomment below and update the code to test the property installments
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property socialSecurityNumber (base name: "socialSecurityNumber")', function() {
      // uncomment below and update the code to test the property socialSecurityNumber
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property captureDelayHours (base name: "captureDelayHours")', function() {
      // uncomment below and update the code to test the property captureDelayHours
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property dateOfBirth (base name: "dateOfBirth")', function() {
      // uncomment below and update the code to test the property dateOfBirth
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property telephoneNumber (base name: "telephoneNumber")', function() {
      // uncomment below and update the code to test the property telephoneNumber
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property mcc (base name: "mcc")', function() {
      // uncomment below and update the code to test the property mcc
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instane = new AdyenApiJs.PaymentRequest3d();
      //expect(instance).to.be();
    });

  });

}));
