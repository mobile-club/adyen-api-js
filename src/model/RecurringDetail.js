/**
 * Adyen api
 * Operations about payments, recurring and payout
 *
 * OpenAPI spec version: 30
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Address', 'model/BankAccount', 'model/Card', 'model/Name', 'model/RecurringDetail'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Address'), require('./BankAccount'), require('./Card'), require('./Name'), require('./RecurringDetail'));
  } else {
    // Browser globals (root is window)
    if (!root.AdyenApiJs) {
      root.AdyenApiJs = {};
    }
    root.AdyenApiJs.RecurringDetail = factory(root.AdyenApiJs.ApiClient, root.AdyenApiJs.Address, root.AdyenApiJs.BankAccount, root.AdyenApiJs.Card, root.AdyenApiJs.Name, root.AdyenApiJs.RecurringDetail);
  }
}(this, function(ApiClient, Address, BankAccount, Card, Name, RecurringDetail) {
  'use strict';




  /**
   * The RecurringDetail model module.
   * @module model/RecurringDetail
   * @version 1.30.5
   */

  /**
   * Constructs a new <code>RecurringDetail</code>.
   * @alias module:model/RecurringDetail
   * @class
   * @param recurringDetailReference {String} The reference that uniquely identifies the recurring detail.
   * @param variant {String} The payment method, such as “mc\", \"visa\", \"ideal\", \"paypal\".
   */
  var exports = function(recurringDetailReference, variant) {
    var _this = this;













    _this['recurringDetailReference'] = recurringDetailReference;


    _this['variant'] = variant;
  };

  /**
   * Constructs a <code>RecurringDetail</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RecurringDetail} obj Optional instance to populate.
   * @return {module:model/RecurringDetail} The populated <code>RecurringDetail</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('RecurringDetail')) {
        obj['RecurringDetail'] = RecurringDetail.constructFromObject(data['RecurringDetail']);
      }
      if (data.hasOwnProperty('additionalData')) {
        obj['additionalData'] = ApiClient.convertToType(data['additionalData'], {'String': 'String'});
      }
      if (data.hasOwnProperty('alias')) {
        obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
      }
      if (data.hasOwnProperty('aliasType')) {
        obj['aliasType'] = ApiClient.convertToType(data['aliasType'], 'String');
      }
      if (data.hasOwnProperty('bank')) {
        obj['bank'] = BankAccount.constructFromObject(data['bank']);
      }
      if (data.hasOwnProperty('billingAddress')) {
        obj['billingAddress'] = Address.constructFromObject(data['billingAddress']);
      }
      if (data.hasOwnProperty('card')) {
        obj['card'] = Card.constructFromObject(data['card']);
      }
      if (data.hasOwnProperty('contractTypes')) {
        obj['contractTypes'] = ApiClient.convertToType(data['contractTypes'], ['String']);
      }
      if (data.hasOwnProperty('creationDate')) {
        obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'Date');
      }
      if (data.hasOwnProperty('firstPspReference')) {
        obj['firstPspReference'] = ApiClient.convertToType(data['firstPspReference'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('paymentMethodVariant')) {
        obj['paymentMethodVariant'] = ApiClient.convertToType(data['paymentMethodVariant'], 'String');
      }
      if (data.hasOwnProperty('recurringDetailReference')) {
        obj['recurringDetailReference'] = ApiClient.convertToType(data['recurringDetailReference'], 'String');
      }
      if (data.hasOwnProperty('shopperName')) {
        obj['shopperName'] = Name.constructFromObject(data['shopperName']);
      }
      if (data.hasOwnProperty('socialSecurityNumber')) {
        obj['socialSecurityNumber'] = ApiClient.convertToType(data['socialSecurityNumber'], 'String');
      }
      if (data.hasOwnProperty('variant')) {
        obj['variant'] = ApiClient.convertToType(data['variant'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/RecurringDetail} RecurringDetail
   */
  exports.prototype['RecurringDetail'] = undefined;
  /**
   * This field contains additional data, which may be returned in a particular response. The additionalData object consists of entries, each of which includes the key and value. For more information on possible key-value pairs, refer to [RecurringDetail.additionalData](https://docs.adyen.com/developers/api-reference/recurring-api#recurringdetailadditionaldata).
   * @member {Object.<String, String>} additionalData
   */
  exports.prototype['additionalData'] = undefined;
  /**
   * The alias of the credit card number. Applies only to recurring contracts storing credit card details
   * @member {String} alias
   */
  exports.prototype['alias'] = undefined;
  /**
   * The alias type of the credit card number. Applies only to recurring contracts storing credit card details.
   * @member {String} aliasType
   */
  exports.prototype['aliasType'] = undefined;
  /**
   * @member {module:model/BankAccount} bank
   */
  exports.prototype['bank'] = undefined;
  /**
   * @member {module:model/Address} billingAddress
   */
  exports.prototype['billingAddress'] = undefined;
  /**
   * @member {module:model/Card} card
   */
  exports.prototype['card'] = undefined;
  /**
   * Types of recurring contracts.
   * @member {Array.<String>} contractTypes
   */
  exports.prototype['contractTypes'] = undefined;
  /**
   * The date when the recurring details were created.
   * @member {Date} creationDate
   */
  exports.prototype['creationDate'] = undefined;
  /**
   * The `pspReference` of the first recurring payment that created the recurring detail.
   * @member {String} firstPspReference
   */
  exports.prototype['firstPspReference'] = undefined;
  /**
   * An optional descriptive name for this recurring detail.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * The  type or sub-brand of a payment method used, e.g. Visa Debit, Visa Corporate, etc. For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/developers/api-reference/common-api/paymentmethodvariant).
   * @member {String} paymentMethodVariant
   */
  exports.prototype['paymentMethodVariant'] = undefined;
  /**
   * The reference that uniquely identifies the recurring detail.
   * @member {String} recurringDetailReference
   */
  exports.prototype['recurringDetailReference'] = undefined;
  /**
   * @member {module:model/Name} shopperName
   */
  exports.prototype['shopperName'] = undefined;
  /**
   * A shopper's social security number (only in countries where it is legal to collect).
   * @member {String} socialSecurityNumber
   */
  exports.prototype['socialSecurityNumber'] = undefined;
  /**
   * The payment method, such as “mc\", \"visa\", \"ideal\", \"paypal\".
   * @member {String} variant
   */
  exports.prototype['variant'] = undefined;


  /**
   * @return {module:model/RecurringDetail}
   */
  exports.prototype.getRecurringDetail = function() {
    return this['RecurringDetail'];
  }

  /**
   * @param {module:model/RecurringDetail} recurringDetail
   */
  exports.prototype.setRecurringDetail = function(recurringDetail) {
    this['RecurringDetail'] = recurringDetail;
  }


  /**
   * Returns This field contains additional data, which may be returned in a particular response. The additionalData object consists of entries, each of which includes the key and value. For more information on possible key-value pairs, refer to [RecurringDetail.additionalData](https://docs.adyen.com/developers/api-reference/recurring-api#recurringdetailadditionaldata).
   * @return {Object.<String, String>}
   */
  exports.prototype.getAdditionalData = function() {
    return this['additionalData'];
  }

  /**
   * Sets This field contains additional data, which may be returned in a particular response. The additionalData object consists of entries, each of which includes the key and value. For more information on possible key-value pairs, refer to [RecurringDetail.additionalData](https://docs.adyen.com/developers/api-reference/recurring-api#recurringdetailadditionaldata).
   * @param {Object.<String, String>} additionalData This field contains additional data, which may be returned in a particular response. The additionalData object consists of entries, each of which includes the key and value. For more information on possible key-value pairs, refer to [RecurringDetail.additionalData](https://docs.adyen.com/developers/api-reference/recurring-api#recurringdetailadditionaldata).
   */
  exports.prototype.setAdditionalData = function(additionalData) {
    this['additionalData'] = additionalData;
  }


  /**
   * Returns The alias of the credit card number. Applies only to recurring contracts storing credit card details
   * @return {String}
   */
  exports.prototype.getAlias = function() {
    return this['alias'];
  }

  /**
   * Sets The alias of the credit card number. Applies only to recurring contracts storing credit card details
   * @param {String} alias The alias of the credit card number. Applies only to recurring contracts storing credit card details
   */
  exports.prototype.setAlias = function(alias) {
    this['alias'] = alias;
  }


  /**
   * Returns The alias type of the credit card number. Applies only to recurring contracts storing credit card details.
   * @return {String}
   */
  exports.prototype.getAliasType = function() {
    return this['aliasType'];
  }

  /**
   * Sets The alias type of the credit card number. Applies only to recurring contracts storing credit card details.
   * @param {String} aliasType The alias type of the credit card number. Applies only to recurring contracts storing credit card details.
   */
  exports.prototype.setAliasType = function(aliasType) {
    this['aliasType'] = aliasType;
  }


  /**
   * @return {module:model/BankAccount}
   */
  exports.prototype.getBank = function() {
    return this['bank'];
  }

  /**
   * @param {module:model/BankAccount} bank
   */
  exports.prototype.setBank = function(bank) {
    this['bank'] = bank;
  }


  /**
   * @return {module:model/Address}
   */
  exports.prototype.getBillingAddress = function() {
    return this['billingAddress'];
  }

  /**
   * @param {module:model/Address} billingAddress
   */
  exports.prototype.setBillingAddress = function(billingAddress) {
    this['billingAddress'] = billingAddress;
  }


  /**
   * @return {module:model/Card}
   */
  exports.prototype.getCard = function() {
    return this['card'];
  }

  /**
   * @param {module:model/Card} card
   */
  exports.prototype.setCard = function(card) {
    this['card'] = card;
  }


  /**
   * Returns Types of recurring contracts.
   * @return {Array.<String>}
   */
  exports.prototype.getContractTypes = function() {
    return this['contractTypes'];
  }

  /**
   * Sets Types of recurring contracts.
   * @param {Array.<String>} contractTypes Types of recurring contracts.
   */
  exports.prototype.setContractTypes = function(contractTypes) {
    this['contractTypes'] = contractTypes;
  }


  /**
   * Returns The date when the recurring details were created.
   * @return {Date}
   */
  exports.prototype.getCreationDate = function() {
    return this['creationDate'];
  }

  /**
   * Sets The date when the recurring details were created.
   * @param {Date} creationDate The date when the recurring details were created.
   */
  exports.prototype.setCreationDate = function(creationDate) {
    this['creationDate'] = creationDate;
  }


  /**
   * Returns The `pspReference` of the first recurring payment that created the recurring detail.
   * @return {String}
   */
  exports.prototype.getFirstPspReference = function() {
    return this['firstPspReference'];
  }

  /**
   * Sets The `pspReference` of the first recurring payment that created the recurring detail.
   * @param {String} firstPspReference The `pspReference` of the first recurring payment that created the recurring detail.
   */
  exports.prototype.setFirstPspReference = function(firstPspReference) {
    this['firstPspReference'] = firstPspReference;
  }


  /**
   * Returns An optional descriptive name for this recurring detail.
   * @return {String}
   */
  exports.prototype.getName = function() {
    return this['name'];
  }

  /**
   * Sets An optional descriptive name for this recurring detail.
   * @param {String} name An optional descriptive name for this recurring detail.
   */
  exports.prototype.setName = function(name) {
    this['name'] = name;
  }


  /**
   * Returns The  type or sub-brand of a payment method used, e.g. Visa Debit, Visa Corporate, etc. For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/developers/api-reference/common-api/paymentmethodvariant).
   * @return {String}
   */
  exports.prototype.getPaymentMethodVariant = function() {
    return this['paymentMethodVariant'];
  }

  /**
   * Sets The  type or sub-brand of a payment method used, e.g. Visa Debit, Visa Corporate, etc. For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/developers/api-reference/common-api/paymentmethodvariant).
   * @param {String} paymentMethodVariant The  type or sub-brand of a payment method used, e.g. Visa Debit, Visa Corporate, etc. For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/developers/api-reference/common-api/paymentmethodvariant).
   */
  exports.prototype.setPaymentMethodVariant = function(paymentMethodVariant) {
    this['paymentMethodVariant'] = paymentMethodVariant;
  }


  /**
   * Returns The reference that uniquely identifies the recurring detail.
   * @return {String}
   */
  exports.prototype.getRecurringDetailReference = function() {
    return this['recurringDetailReference'];
  }

  /**
   * Sets The reference that uniquely identifies the recurring detail.
   * @param {String} recurringDetailReference The reference that uniquely identifies the recurring detail.
   */
  exports.prototype.setRecurringDetailReference = function(recurringDetailReference) {
    this['recurringDetailReference'] = recurringDetailReference;
  }


  /**
   * @return {module:model/Name}
   */
  exports.prototype.getShopperName = function() {
    return this['shopperName'];
  }

  /**
   * @param {module:model/Name} shopperName
   */
  exports.prototype.setShopperName = function(shopperName) {
    this['shopperName'] = shopperName;
  }


  /**
   * Returns A shopper's social security number (only in countries where it is legal to collect).
   * @return {String}
   */
  exports.prototype.getSocialSecurityNumber = function() {
    return this['socialSecurityNumber'];
  }

  /**
   * Sets A shopper's social security number (only in countries where it is legal to collect).
   * @param {String} socialSecurityNumber A shopper's social security number (only in countries where it is legal to collect).
   */
  exports.prototype.setSocialSecurityNumber = function(socialSecurityNumber) {
    this['socialSecurityNumber'] = socialSecurityNumber;
  }


  /**
   * Returns The payment method, such as “mc\", \"visa\", \"ideal\", \"paypal\".
   * @return {String}
   */
  exports.prototype.getVariant = function() {
    return this['variant'];
  }

  /**
   * Sets The payment method, such as “mc\", \"visa\", \"ideal\", \"paypal\".
   * @param {String} variant The payment method, such as “mc\", \"visa\", \"ideal\", \"paypal\".
   */
  exports.prototype.setVariant = function(variant) {
    this['variant'] = variant;
  }



  return exports;
}));


