/**
 * Adyen api
 * Operations about payments, recurring and payout
 *
 * OpenAPI spec version: 30
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ModificationResultResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ModificationResultResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.AdyenApiJs) {
      root.AdyenApiJs = {};
    }
    root.AdyenApiJs.ModificationResult = factory(root.AdyenApiJs.ApiClient, root.AdyenApiJs.ModificationResultResponse);
  }
}(this, function(ApiClient, ModificationResultResponse) {
  'use strict';




  /**
   * The ModificationResult model module.
   * @module model/ModificationResult
   * @version 1.30.5
   */

  /**
   * Constructs a new <code>ModificationResult</code>.
   * @alias module:model/ModificationResult
   * @class
   * @param pspReference {String} the unique identifier assigned to this modification.
   * @param response {module:model/ModificationResultResponse} 
   */
  var exports = function(pspReference, response) {
    var _this = this;


    _this['pspReference'] = pspReference;
    _this['response'] = response;
  };

  /**
   * Constructs a <code>ModificationResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModificationResult} obj Optional instance to populate.
   * @return {module:model/ModificationResult} The populated <code>ModificationResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('additionalData')) {
        obj['additionalData'] = ApiClient.convertToType(data['additionalData'], Object);
      }
      if (data.hasOwnProperty('pspReference')) {
        obj['pspReference'] = ApiClient.convertToType(data['pspReference'], 'String');
      }
      if (data.hasOwnProperty('response')) {
        obj['response'] = ModificationResultResponse.constructFromObject(data['response']);
      }
    }
    return obj;
  }

  /**
   * a map of name/value pairs for passing back additional / industry-specific data
   * @member {Object} additionalData
   */
  exports.prototype['additionalData'] = undefined;
  /**
   * the unique identifier assigned to this modification.
   * @member {String} pspReference
   */
  exports.prototype['pspReference'] = undefined;
  /**
   * @member {module:model/ModificationResultResponse} response
   */
  exports.prototype['response'] = undefined;


  /**
   * Returns a map of name/value pairs for passing back additional / industry-specific data
   * @return {Object}
   */
  exports.prototype.getAdditionalData = function() {
    return this['additionalData'];
  }

  /**
   * Sets a map of name/value pairs for passing back additional / industry-specific data
   * @param {Object} additionalData a map of name/value pairs for passing back additional / industry-specific data
   */
  exports.prototype.setAdditionalData = function(additionalData) {
    this['additionalData'] = additionalData;
  }


  /**
   * Returns the unique identifier assigned to this modification.
   * @return {String}
   */
  exports.prototype.getPspReference = function() {
    return this['pspReference'];
  }

  /**
   * Sets the unique identifier assigned to this modification.
   * @param {String} pspReference the unique identifier assigned to this modification.
   */
  exports.prototype.setPspReference = function(pspReference) {
    this['pspReference'] = pspReference;
  }


  /**
   * @return {module:model/ModificationResultResponse}
   */
  exports.prototype.getResponse = function() {
    return this['response'];
  }

  /**
   * @param {module:model/ModificationResultResponse} response
   */
  exports.prototype.setResponse = function(response) {
    this['response'] = response;
  }



  return exports;
}));


